Terminals unused in grammar

   ID
   STRING
   COMMA
   COLON
   SEMICOLON
   LPAREN
   RPAREN
   LBRACK
   RBRACK
   LBRACE
   RBRACE
   DOT
   PLUS
   MINUS
   TIMES
   DIVIDE
   EQ
   NEQ
   LT
   LE
   GT
   GE
   AND
   OR
   ASSIGN
   ARRAY
   WHILE
   FOR
   TO
   DO
   LET
   IN
   END
   OF
   BREAK
   NIL
   FUNCTION
   VAR
   TYPE


语法

    0 $accept: program $end

    1 program: exps

    2 exps: exps exp
    3     | exp

    4 exp: S

    5 S: M
    6  | U

    7 M: IF E THEN M ELSE M
    8  | other

    9 U: IF E THEN S
   10  | IF E THEN M ELSE U

   11 other: INT

   12 E: INT


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258)
STRING (259)
INT (260) 11 12
COMMA (261)
COLON (262)
SEMICOLON (263)
LPAREN (264)
RPAREN (265)
LBRACK (266)
RBRACK (267)
LBRACE (268)
RBRACE (269)
DOT (270)
PLUS (271)
MINUS (272)
TIMES (273)
DIVIDE (274)
EQ (275)
NEQ (276)
LT (277)
LE (278)
GT (279)
GE (280)
AND (281)
OR (282)
ASSIGN (283)
ARRAY (284)
IF (285) 7 9 10
THEN (286) 7 9 10
ELSE (287) 7 10
WHILE (288)
FOR (289)
TO (290)
DO (291)
LET (292)
IN (293)
END (294)
OF (295)
BREAK (296)
NIL (297)
FUNCTION (298)
VAR (299)
TYPE (300)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1, on right: 0
exps (48)
    on left: 2 3, on right: 1 2
exp (49)
    on left: 4, on right: 2 3
S (50)
    on left: 5 6, on right: 4 9
M (51)
    on left: 7 8, on right: 5 7 10
U (52)
    on left: 9 10, on right: 6 10
other (53)
    on left: 11, on right: 8
E (54)
    on left: 12, on right: 7 9 10


State 0

    0 $accept: . program $end

    INT  shift, and go to state 1
    IF   shift, and go to state 2

    program  转到状态 3
    exps     转到状态 4
    exp      转到状态 5
    S        转到状态 6
    M        转到状态 7
    U        转到状态 8
    other    转到状态 9


State 1

   11 other: INT .

    $default  reduce using rule 11 (other)


State 2

    7 M: IF . E THEN M ELSE M
    9 U: IF . E THEN S
   10  | IF . E THEN M ELSE U

    INT  shift, and go to state 10

    E  转到状态 11


State 3

    0 $accept: program . $end

    $end  shift, and go to state 12


State 4

    1 program: exps .
    2 exps: exps . exp

    INT  shift, and go to state 1
    IF   shift, and go to state 2

    $default  reduce using rule 1 (program)

    exp    转到状态 13
    S      转到状态 6
    M      转到状态 7
    U      转到状态 8
    other  转到状态 9


State 5

    3 exps: exp .

    $default  reduce using rule 3 (exps)


State 6

    4 exp: S .

    $default  reduce using rule 4 (exp)


State 7

    5 S: M .

    $default  reduce using rule 5 (S)


State 8

    6 S: U .

    $default  reduce using rule 6 (S)


State 9

    8 M: other .

    $default  reduce using rule 8 (M)


State 10

   12 E: INT .

    $default  reduce using rule 12 (E)


State 11

    7 M: IF E . THEN M ELSE M
    9 U: IF E . THEN S
   10  | IF E . THEN M ELSE U

    THEN  shift, and go to state 14


State 12

    0 $accept: program $end .

    $default  接受


State 13

    2 exps: exps exp .

    $default  reduce using rule 2 (exps)


State 14

    7 M: IF E THEN . M ELSE M
    9 U: IF E THEN . S
   10  | IF E THEN . M ELSE U

    INT  shift, and go to state 1
    IF   shift, and go to state 2

    S      转到状态 15
    M      转到状态 16
    U      转到状态 8
    other  转到状态 9


State 15

    9 U: IF E THEN S .

    $default  reduce using rule 9 (U)


State 16

    5 S: M .
    7 M: IF E THEN M . ELSE M
   10 U: IF E THEN M . ELSE U

    ELSE  shift, and go to state 17

    $default  reduce using rule 5 (S)


State 17

    7 M: IF E THEN M ELSE . M
   10 U: IF E THEN M ELSE . U

    INT  shift, and go to state 1
    IF   shift, and go to state 2

    M      转到状态 18
    U      转到状态 19
    other  转到状态 9


State 18

    7 M: IF E THEN M ELSE M .

    $default  reduce using rule 7 (M)


State 19

   10 U: IF E THEN M ELSE U .

    $default  reduce using rule 10 (U)
