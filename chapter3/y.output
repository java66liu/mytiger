状态 0conflicts: 1 shift/reduce
状态 2conflicts: 6 shift/reduce
状态 4conflicts: 2 shift/reduce
状态 5conflicts: 1 shift/reduce
状态 9conflicts: 1 shift/reduce
状态 10conflicts: 1 shift/reduce
状态 25conflicts: 1 shift/reduce
状态 47conflicts: 2 shift/reduce
状态 83conflicts: 2 shift/reduce
状态 84conflicts: 2 shift/reduce
状态 85conflicts: 2 shift/reduce
状态 86conflicts: 1 shift/reduce
状态 88conflicts: 2 shift/reduce
状态 93conflicts: 1 shift/reduce
状态 95conflicts: 1 shift/reduce
状态 101conflicts: 2 shift/reduce
状态 102conflicts: 2 shift/reduce
状态 103conflicts: 1 shift/reduce
状态 104conflicts: 2 shift/reduce
状态 109conflicts: 12 shift/reduce
状态 110conflicts: 12 shift/reduce
状态 111conflicts: 12 shift/reduce
状态 114conflicts: 12 shift/reduce
状态 115conflicts: 1 shift/reduce
状态 121conflicts: 12 shift/reduce
状态 122conflicts: 12 shift/reduce
状态 131conflicts: 1 shift/reduce
状态 145conflicts: 2 shift/reduce
状态 146conflicts: 1 shift/reduce
状态 147conflicts: 1 shift/reduce
状态 151conflicts: 1 shift/reduce
状态 156conflicts: 12 shift/reduce
状态 160conflicts: 2 shift/reduce
状态 167conflicts: 2 shift/reduce
状态 171conflicts: 1 shift/reduce
状态 174conflicts: 12 shift/reduce
状态 175conflicts: 2 shift/reduce
状态 176conflicts: 2 shift/reduce
状态 180conflicts: 1 shift/reduce
状态 182conflicts: 7 reduce/reduce
状态 183conflicts: 7 reduce/reduce
状态 184conflicts: 7 reduce/reduce
状态 186conflicts: 7 reduce/reduce
状态 187conflicts: 1 shift/reduce


语法

    0 $accept: program $end

    1 program: decs
    2        | exp

    3 decs: decs dec
    4     | dec

    5 dec: tydec
    6    | vardec
    7    | fundec

    8 tydec: TYPE ID EQ ty
    9      | LBRACK tyfields RBRACK
   10      | ARRAY OF ID

   11 ty: ID
   12   | ARRAY OF ID
   13   | LBRACE tyfields RBRACE

   14 tyfields: tyfields COMMA tyfield
   15         | tyfield

   16 tyfield: ID COLON ID
   17        | empty

   18 vardec: VAR ID ASSIGN new
   19       | VAR ID COLON ID ASSIGN new

   20 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   21       | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp

   22 exp: lvalue
   23    | no_value_exp
   24    | nil
   25    | list
   26    | int
   27    | string
   28    | function
   29    | operation
   30    | compare
   31    | assign
   32    | if_then
   33    | if_then_else
   34    | while_do
   35    | for_to_do
   36    | break
   37    | let_in_end
   38    | parentheses

   39 lvalue: ID
   40       | lvalue DOT ID
   41       | lvalue LBRACK exp RBRACK

   42 no_value_exp: LPAREN RPAREN
   43             | LBRACK RBRACK
   44             | LBRACE RBRACE
   45             | empty

   46 nil: NIL

   47 list: LPAREN list_exps RPAREN

   48 list_exps: list_exps SEMICOLON exp
   49          | exp SEMICOLON exp

   50 int: INT
   51    | MINUS int

   52 string: STRING

   53 function: ID LPAREN RPAREN
   54         | ID LPAREN function_exps RPAREN

   55 function_exps: function_exps COMMA exp
   56              | exp

   57 operation: exp_operation
   58          | bool_operation

   59 exp_operation: exp exp_op exp

   60 exp_op: PLUS
   61       | MINUS
   62       | TIMES
   63       | DIVIDE

   64 bool_operation: exp bool_op exp

   65 bool_op: AND
   66        | OR

   67 compare: exp_compare
   68        | string_compare

   69 exp_compare: exp compare_op exp

   70 string_compare: STRING compare_op STRING

   71 compare_op: EQ
   72           | NEQ
   73           | LT
   74           | LE
   75           | GT
   76           | GE

   77 new: type_new
   78    | array_new
   79    | int
   80    | string
   81    | parentheses
   82    | nil

   83 type_new: ID LBRACE type_new_exps RBRACE

   84 type_new_exps: type_new_exps COMMA ID EQ exp
   85              | ID EQ exp

   86 array_new: ID LBRACK exp RBRACK OF exp
   87          | ID LBRACK exp RBRACK OF new

   88 assign: lvalue ASSIGN exp

   89 if_then: IF exp THEN exp

   90 if_then_else: IF exp THEN exp ELSE exp

   91 while_do: WHILE exp DO exp

   92 for_to_do: FOR ID ASSIGN exp TO exp DO exp

   93 break: BREAK

   94 let_in_end: LET decs IN expseq END
   95           | LET decs IN END

   96 expseq: expseq SEMICOLON exp
   97       | exp

   98 parentheses: LPAREN exp RPAREN

   99 empty: %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 8 10 11 12 16 18 19 20 21 39 40 53 54 83 84 85 86 87 92
STRING (259) 52 70
INT (260) 50
COMMA (261) 14 55 84
COLON (262) 16 19 21
SEMICOLON (263) 48 49 96
LPAREN (264) 20 21 42 47 53 54 98
RPAREN (265) 20 21 42 47 53 54 98
LBRACK (266) 9 41 43 86 87
RBRACK (267) 9 41 43 86 87
LBRACE (268) 13 44 83
RBRACE (269) 13 44 83
DOT (270) 40
PLUS (271) 60
MINUS (272) 51 61
TIMES (273) 62
DIVIDE (274) 63
EQ (275) 8 20 21 71 84 85
NEQ (276) 72
LT (277) 73
LE (278) 74
GT (279) 75
GE (280) 76
AND (281) 65
OR (282) 66
ASSIGN (283) 18 19 88 92
ARRAY (284) 10 12
IF (285) 89 90
THEN (286) 89 90
ELSE (287) 90
WHILE (288) 91
FOR (289) 92
TO (290) 92
DO (291) 91 92
LET (292) 94 95
IN (293) 94 95
END (294) 94 95
OF (295) 10 12 86 87
BREAK (296) 93
NIL (297) 46
FUNCTION (298) 20 21
VAR (299) 18 19
TYPE (300) 8
IFX (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1 2, on right: 0
decs (49)
    on left: 3 4, on right: 1 3 94 95
dec (50)
    on left: 5 6 7, on right: 3 4
tydec (51)
    on left: 8 9 10, on right: 5
ty (52)
    on left: 11 12 13, on right: 8
tyfields (53)
    on left: 14 15, on right: 9 13 14 20 21
tyfield (54)
    on left: 16 17, on right: 14 15
vardec (55)
    on left: 18 19, on right: 6
fundec (56)
    on left: 20 21, on right: 7
exp (57)
    on left: 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38, on right:
    2 20 21 41 48 49 55 56 59 64 69 84 85 86 87 88 89 90 91 92 96 97
    98
lvalue (58)
    on left: 39 40 41, on right: 22 40 41 88
no_value_exp (59)
    on left: 42 43 44 45, on right: 23
nil (60)
    on left: 46, on right: 24 82
list (61)
    on left: 47, on right: 25
list_exps (62)
    on left: 48 49, on right: 47 48
int (63)
    on left: 50 51, on right: 26 51 79
string (64)
    on left: 52, on right: 27 80
function (65)
    on left: 53 54, on right: 28
function_exps (66)
    on left: 55 56, on right: 54 55
operation (67)
    on left: 57 58, on right: 29
exp_operation (68)
    on left: 59, on right: 57
exp_op (69)
    on left: 60 61 62 63, on right: 59
bool_operation (70)
    on left: 64, on right: 58
bool_op (71)
    on left: 65 66, on right: 64
compare (72)
    on left: 67 68, on right: 30
exp_compare (73)
    on left: 69, on right: 67
string_compare (74)
    on left: 70, on right: 68
compare_op (75)
    on left: 71 72 73 74 75 76, on right: 69 70
new (76)
    on left: 77 78 79 80 81 82, on right: 18 19 87
type_new (77)
    on left: 83, on right: 77
type_new_exps (78)
    on left: 84 85, on right: 83 84
array_new (79)
    on left: 86 87, on right: 78
assign (80)
    on left: 88, on right: 31
if_then (81)
    on left: 89, on right: 32
if_then_else (82)
    on left: 90, on right: 33
while_do (83)
    on left: 91, on right: 34
for_to_do (84)
    on left: 92, on right: 35
break (85)
    on left: 93, on right: 36
let_in_end (86)
    on left: 94 95, on right: 37
expseq (87)
    on left: 96 97, on right: 94 96
parentheses (88)
    on left: 98, on right: 38 81
empty (89)
    on left: 99, on right: 17 45


State 0

    0 $accept: . program $end

    ID        shift, and go to state 1
    STRING    shift, and go to state 2
    INT       shift, and go to state 3
    LPAREN    shift, and go to state 4
    LBRACK    shift, and go to state 5
    LBRACE    shift, and go to state 6
    MINUS     shift, and go to state 7
    ARRAY     shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    LET       shift, and go to state 12
    BREAK     shift, and go to state 13
    NIL       shift, and go to state 14
    FUNCTION  shift, and go to state 15
    VAR       shift, and go to state 16
    TYPE      shift, and go to state 17

    MINUS     [reduce using rule 99 (empty)]
    $default  reduce using rule 99 (empty)

    program         转到状态 18
    decs            转到状态 19
    dec             转到状态 20
    tydec           转到状态 21
    vardec          转到状态 22
    fundec          转到状态 23
    exp             转到状态 24
    lvalue          转到状态 25
    no_value_exp    转到状态 26
    nil             转到状态 27
    list            转到状态 28
    int             转到状态 29
    string          转到状态 30
    function        转到状态 31
    operation       转到状态 32
    exp_operation   转到状态 33
    bool_operation  转到状态 34
    compare         转到状态 35
    exp_compare     转到状态 36
    string_compare  转到状态 37
    assign          转到状态 38
    if_then         转到状态 39
    if_then_else    转到状态 40
    while_do        转到状态 41
    for_to_do       转到状态 42
    break           转到状态 43
    let_in_end      转到状态 44
    parentheses     转到状态 45
    empty           转到状态 46


State 1

   39 lvalue: ID .
   53 function: ID . LPAREN RPAREN
   54         | ID . LPAREN function_exps RPAREN

    LPAREN  shift, and go to state 47

    $default  reduce using rule 39 (lvalue)


State 2

   52 string: STRING .
   70 string_compare: STRING . compare_op STRING

    EQ   shift, and go to state 48
    NEQ  shift, and go to state 49
    LT   shift, and go to state 50
    LE   shift, and go to state 51
    GT   shift, and go to state 52
    GE   shift, and go to state 53

    EQ        [reduce using rule 52 (string)]
    NEQ       [reduce using rule 52 (string)]
    LT        [reduce using rule 52 (string)]
    LE        [reduce using rule 52 (string)]
    GT        [reduce using rule 52 (string)]
    GE        [reduce using rule 52 (string)]
    $default  reduce using rule 52 (string)

    compare_op  转到状态 54


State 3

   50 int: INT .

    $default  reduce using rule 50 (int)


State 4

   42 no_value_exp: LPAREN . RPAREN
   47 list: LPAREN . list_exps RPAREN
   98 parentheses: LPAREN . exp RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 55
    LBRACK  shift, and go to state 56
    LBRACE  shift, and go to state 6
    MINUS   shift, and go to state 7
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    LET     shift, and go to state 12
    BREAK   shift, and go to state 13
    NIL     shift, and go to state 14

    RPAREN    [reduce using rule 99 (empty)]
    MINUS     [reduce using rule 99 (empty)]
    $default  reduce using rule 99 (empty)

    exp             转到状态 57
    lvalue          转到状态 25
    no_value_exp    转到状态 26
    nil             转到状态 27
    list            转到状态 28
    list_exps       转到状态 58
    int             转到状态 29
    string          转到状态 30
    function        转到状态 31
    operation       转到状态 32
    exp_operation   转到状态 33
    bool_operation  转到状态 34
    compare         转到状态 35
    exp_compare     转到状态 36
    string_compare  转到状态 37
    assign          转到状态 38
    if_then         转到状态 39
    if_then_else    转到状态 40
    while_do        转到状态 41
    for_to_do       转到状态 42
    break           转到状态 43
    let_in_end      转到状态 44
    parentheses     转到状态 45
    empty           转到状态 46


State 5

    9 tydec: LBRACK . tyfields RBRACK
   43 no_value_exp: LBRACK . RBRACK

    ID      shift, and go to state 59
    RBRACK  shift, and go to state 60

    RBRACK    [reduce using rule 99 (empty)]
    $default  reduce using rule 99 (empty)

    tyfields  转到状态 61
    tyfield   转到状态 62
    empty     转到状态 63


State 6

   44 no_value_exp: LBRACE . RBRACE

    RBRACE  shift, and go to state 64


State 7

   51 int: MINUS . int

    INT    shift, and go to state 3
    MINUS  shift, and go to state 7

    int  转到状态 65


State 8

   10 tydec: ARRAY . OF ID

    OF  shift, and go to state 66


State 9

   89 if_then: IF . exp THEN exp
   90 if_then_else: IF . exp THEN exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACK  shift, and go to state 56
    LBRACE  shift, and go to state 6
    MINUS   shift, and go to state 7
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    LET     shift, and go to state 12
    BREAK   shift, and go to state 13
    NIL     shift, and go to state 14

    MINUS     [reduce using rule 99 (empty)]
    $default  reduce using rule 99 (empty)

    exp             转到状态 67
    lvalue          转到状态 25
    no_value_exp    转到状态 26
    nil             转到状态 27
    list            转到状态 28
    int             转到状态 29
    string          转到状态 30
    function        转到状态 31
    operation       转到状态 32
    exp_operation   转到状态 33
    bool_operation  转到状态 34
    compare         转到状态 35
    exp_compare     转到状态 36
    string_compare  转到状态 37
    assign          转到状态 38
    if_then         转到状态 39
    if_then_else    转到状态 40
    while_do        转到状态 41
    for_to_do       转到状态 42
    break           转到状态 43
    let_in_end      转到状态 44
    parentheses     转到状态 45
    empty           转到状态 46


State 10

   91 while_do: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACK  shift, and go to state 56
    LBRACE  shift, and go to state 6
    MINUS   shift, and go to state 7
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    LET     shift, and go to state 12
    BREAK   shift, and go to state 13
    NIL     shift, and go to state 14

    MINUS     [reduce using rule 99 (empty)]
    $default  reduce using rule 99 (empty)

    exp             转到状态 68
    lvalue          转到状态 25
    no_value_exp    转到状态 26
    nil             转到状态 27
    list            转到状态 28
    int             转到状态 29
    string          转到状态 30
    function        转到状态 31
    operation       转到状态 32
    exp_operation   转到状态 33
    bool_operation  转到状态 34
    compare         转到状态 35
    exp_compare     转到状态 36
    string_compare  转到状态 37
    assign          转到状态 38
    if_then         转到状态 39
    if_then_else    转到状态 40
    while_do        转到状态 41
    for_to_do       转到状态 42
    break           转到状态 43
    let_in_end      转到状态 44
    parentheses     转到状态 45
    empty           转到状态 46


State 11

   92 for_to_do: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 69


State 12

   94 let_in_end: LET . decs IN expseq END
   95           | LET . decs IN END

    LBRACK    shift, and go to state 70
    ARRAY     shift, and go to state 8
    FUNCTION  shift, and go to state 15
    VAR       shift, and go to state 16
    TYPE      shift, and go to state 17

    decs    转到状态 71
    dec     转到状态 20
    tydec   转到状态 21
    vardec  转到状态 22
    fundec  转到状态 23


State 13

   93 break: BREAK .

    $default  reduce using rule 93 (break)


State 14

   46 nil: NIL .

    $default  reduce using rule 46 (nil)


State 15

   20 fundec: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   21       | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 72


State 16

   18 vardec: VAR . ID ASSIGN new
   19       | VAR . ID COLON ID ASSIGN new

    ID  shift, and go to state 73


State 17

    8 tydec: TYPE . ID EQ ty

    ID  shift, and go to state 74


State 18

    0 $accept: program . $end

    $end  shift, and go to state 75


State 19

    1 program: decs .
    3 decs: decs . dec

    LBRACK    shift, and go to state 70
    ARRAY     shift, and go to state 8
    FUNCTION  shift, and go to state 15
    VAR       shift, and go to state 16
    TYPE      shift, and go to state 17

    $default  reduce using rule 1 (program)

    dec     转到状态 76
    tydec   转到状态 21
    vardec  转到状态 22
    fundec  转到状态 23


State 20

    4 decs: dec .

    $default  reduce using rule 4 (decs)


State 21

    5 dec: tydec .

    $default  reduce using rule 5 (dec)


State 22

    6 dec: vardec .

    $default  reduce using rule 6 (dec)


State 23

    7 dec: fundec .

    $default  reduce using rule 7 (dec)


State 24

    2 program: exp .
   59 exp_operation: exp . exp_op exp
   64 bool_operation: exp . bool_op exp
   69 exp_compare: exp . compare_op exp

    PLUS    shift, and go to state 77
    MINUS   shift, and go to state 78
    TIMES   shift, and go to state 79
    DIVIDE  shift, and go to state 80
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 81
    OR      shift, and go to state 82

    $default  reduce using rule 2 (program)

    exp_op      转到状态 83
    bool_op     转到状态 84
    compare_op  转到状态 85


State 25

   22 exp: lvalue .
   40 lvalue: lvalue . DOT ID
   41       | lvalue . LBRACK exp RBRACK
   88 assign: lvalue . ASSIGN exp

    LBRACK  shift, and go to state 86
    DOT     shift, and go to state 87
    ASSIGN  shift, and go to state 88

    LBRACK    [reduce using rule 22 (exp)]
    $default  reduce using rule 22 (exp)


State 26

   23 exp: no_value_exp .

    $default  reduce using rule 23 (exp)


State 27

   24 exp: nil .

    $default  reduce using rule 24 (exp)


State 28

   25 exp: list .

    $default  reduce using rule 25 (exp)


State 29

   26 exp: int .

    $default  reduce using rule 26 (exp)


State 30

   27 exp: string .

    $default  reduce using rule 27 (exp)


State 31

   28 exp: function .

    $default  reduce using rule 28 (exp)


State 32

   29 exp: operation .

    $default  reduce using rule 29 (exp)


State 33

   57 operation: exp_operation .

    $default  reduce using rule 57 (operation)


State 34

   58 operation: bool_operation .

    $default  reduce using rule 58 (operation)


State 35

   30 exp: compare .

    $default  reduce using rule 30 (exp)


State 36

   67 compare: exp_compare .

    $default  reduce using rule 67 (compare)


State 37

   68 compare: string_compare .

    $default  reduce using rule 68 (compare)


State 38

   31 exp: assign .

    $default  reduce using rule 31 (exp)


State 39

   32 exp: if_then .

    $default  reduce using rule 32 (exp)


State 40

   33 exp: if_then_else .

    $default  reduce using rule 33 (exp)


State 41

   34 exp: while_do .

    $default  reduce using rule 34 (exp)


State 42

   35 exp: for_to_do .

    $default  reduce using rule 35 (exp)


State 43

   36 exp: break .

    $default  reduce using rule 36 (exp)


State 44

   37 exp: let_in_end .

    $default  reduce using rule 37 (exp)


State 45

   38 exp: parentheses .

    $default  reduce using rule 38 (exp)


State 46

   45 no_value_exp: empty .

    $default  reduce using rule 45 (no_value_exp)


State 47

   53 function: ID LPAREN . RPAREN
   54         | ID LPAREN . function_exps RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 89
    LBRACK  shift, and go to state 56
    LBRACE  shift, and go to state 6
    MINUS   shift, and go to state 7
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    LET     shift, and go to state 12
    BREAK   shift, and go to state 13
    NIL     shift, and go to state 14

    RPAREN    [reduce using rule 99 (empty)]
    MINUS     [reduce using rule 99 (empty)]
    $default  reduce using rule 99 (empty)

    exp             转到状态 90
    lvalue          转到状态 25
    no_value_exp    转到状态 26
    nil             转到状态 27
    list            转到状态 28
    int             转到状态 29
    string          转到状态 30
    function        转到状态 31
    function_exps   转到状态 91
    operation       转到状态 32
    exp_operation   转到状态 33
    bool_operation  转到状态 34
    compare         转到状态 35
    exp_compare     转到状态 36
    string_compare  转到状态 37
    assign          转到状态 38
    if_then         转到状态 39
    if_then_else    转到状态 40
    while_do        转到状态 41
    for_to_do       转到状态 42
    break           转到状态 43
    let_in_end      转到状态 44
    parentheses     转到状态 45
    empty           转到状态 46


State 48

   71 compare_op: EQ .

    $default  reduce using rule 71 (compare_op)


State 49

   72 compare_op: NEQ .

    $default  reduce using rule 72 (compare_op)


State 50

   73 compare_op: LT .

    $default  reduce using rule 73 (compare_op)


State 51

   74 compare_op: LE .

    $default  reduce using rule 74 (compare_op)


State 52

   75 compare_op: GT .

    $default  reduce using rule 75 (compare_op)


State 53

   76 compare_op: GE .

    $default  reduce using rule 76 (compare_op)


State 54

   70 string_compare: STRING compare_op . STRING

    STRING  shift, and go to state 92


State 55

   42 no_value_exp: LPAREN RPAREN .

    $default  reduce using rule 42 (no_value_exp)


State 56

   43 no_value_exp: LBRACK . RBRACK

    RBRACK  shift, and go to state 60


State 57

   49 list_exps: exp . SEMICOLON exp
   59 exp_operation: exp . exp_op exp
   64 bool_operation: exp . bool_op exp
   69 exp_compare: exp . compare_op exp
   98 parentheses: LPAREN exp . RPAREN

    SEMICOLON  shift, and go to state 93
    RPAREN     shift, and go to state 94
    PLUS       shift, and go to state 77
    MINUS      shift, and go to state 78
    TIMES      shift, and go to state 79
    DIVIDE     shift, and go to state 80
    EQ         shift, and go to state 48
    NEQ        shift, and go to state 49
    LT         shift, and go to state 50
    LE         shift, and go to state 51
    GT         shift, and go to state 52
    GE         shift, and go to state 53
    AND        shift, and go to state 81
    OR         shift, and go to state 82

    exp_op      转到状态 83
    bool_op     转到状态 84
    compare_op  转到状态 85


State 58

   47 list: LPAREN list_exps . RPAREN
   48 list_exps: list_exps . SEMICOLON exp

    SEMICOLON  shift, and go to state 95
    RPAREN     shift, and go to state 96


State 59

   16 tyfield: ID . COLON ID

    COLON  shift, and go to state 97


State 60

   43 no_value_exp: LBRACK RBRACK .

    $default  reduce using rule 43 (no_value_exp)


State 61

    9 tydec: LBRACK tyfields . RBRACK
   14 tyfields: tyfields . COMMA tyfield

    COMMA   shift, and go to state 98
    RBRACK  shift, and go to state 99


State 62

   15 tyfields: tyfield .

    $default  reduce using rule 15 (tyfields)


State 63

   17 tyfield: empty .

    $default  reduce using rule 17 (tyfield)


State 64

   44 no_value_exp: LBRACE RBRACE .

    $default  reduce using rule 44 (no_value_exp)


State 65

   51 int: MINUS int .

    $default  reduce using rule 51 (int)


State 66

   10 tydec: ARRAY OF . ID

    ID  shift, and go to state 100


State 67

   59 exp_operation: exp . exp_op exp
   64 bool_operation: exp . bool_op exp
   69 exp_compare: exp . compare_op exp
   89 if_then: IF exp . THEN exp
   90 if_then_else: IF exp . THEN exp ELSE exp

    PLUS    shift, and go to state 77
    MINUS   shift, and go to state 78
    TIMES   shift, and go to state 79
    DIVIDE  shift, and go to state 80
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 81
    OR      shift, and go to state 82
    THEN    shift, and go to state 101

    exp_op      转到状态 83
    bool_op     转到状态 84
    compare_op  转到状态 85


State 68

   59 exp_operation: exp . exp_op exp
   64 bool_operation: exp . bool_op exp
   69 exp_compare: exp . compare_op exp
   91 while_do: WHILE exp . DO exp

    PLUS    shift, and go to state 77
    MINUS   shift, and go to state 78
    TIMES   shift, and go to state 79
    DIVIDE  shift, and go to state 80
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 81
    OR      shift, and go to state 82
    DO      shift, and go to state 102

    exp_op      转到状态 83
    bool_op     转到状态 84
    compare_op  转到状态 85


State 69

   92 for_to_do: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 103


State 70

    9 tydec: LBRACK . tyfields RBRACK

    ID  shift, and go to state 59

    $default  reduce using rule 99 (empty)

    tyfields  转到状态 61
    tyfield   转到状态 62
    empty     转到状态 63


State 71

    3 decs: decs . dec
   94 let_in_end: LET decs . IN expseq END
   95           | LET decs . IN END

    LBRACK    shift, and go to state 70
    ARRAY     shift, and go to state 8
    IN        shift, and go to state 104
    FUNCTION  shift, and go to state 15
    VAR       shift, and go to state 16
    TYPE      shift, and go to state 17

    dec     转到状态 76
    tydec   转到状态 21
    vardec  转到状态 22
    fundec  转到状态 23


State 72

   20 fundec: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   21       | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 105


State 73

   18 vardec: VAR ID . ASSIGN new
   19       | VAR ID . COLON ID ASSIGN new

    COLON   shift, and go to state 106
    ASSIGN  shift, and go to state 107


State 74

    8 tydec: TYPE ID . EQ ty

    EQ  shift, and go to state 108


State 75

    0 $accept: program $end .

    $default  接受


State 76

    3 decs: decs dec .

    $default  reduce using rule 3 (decs)


State 77

   60 exp_op: PLUS .

    $default  reduce using rule 60 (exp_op)


State 78

   61 exp_op: MINUS .

    $default  reduce using rule 61 (exp_op)


State 79

   62 exp_op: TIMES .

    $default  reduce using rule 62 (exp_op)


State 80

   63 exp_op: DIVIDE .

    $default  reduce using rule 63 (exp_op)


State 81

   65 bool_op: AND .

    $default  reduce using rule 65 (bool_op)


State 82

   66 bool_op: OR .

    $default  reduce using rule 66 (bool_op)


State 83

   59 exp_operation: exp exp_op . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACK  shift, and go to state 56
    LBRACE  shift, and go to state 6
    MINUS   shift, and go to state 7
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    LET     shift, and go to state 12
    BREAK   shift, and go to state 13
    NIL     shift, and go to state 14

    LBRACK    [reduce using rule 99 (empty)]
    MINUS     [reduce using rule 99 (empty)]
    $default  reduce using rule 99 (empty)

    exp             转到状态 109
    lvalue          转到状态 25
    no_value_exp    转到状态 26
    nil             转到状态 27
    list            转到状态 28
    int             转到状态 29
    string          转到状态 30
    function        转到状态 31
    operation       转到状态 32
    exp_operation   转到状态 33
    bool_operation  转到状态 34
    compare         转到状态 35
    exp_compare     转到状态 36
    string_compare  转到状态 37
    assign          转到状态 38
    if_then         转到状态 39
    if_then_else    转到状态 40
    while_do        转到状态 41
    for_to_do       转到状态 42
    break           转到状态 43
    let_in_end      转到状态 44
    parentheses     转到状态 45
    empty           转到状态 46


State 84

   64 bool_operation: exp bool_op . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACK  shift, and go to state 56
    LBRACE  shift, and go to state 6
    MINUS   shift, and go to state 7
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    LET     shift, and go to state 12
    BREAK   shift, and go to state 13
    NIL     shift, and go to state 14

    LBRACK    [reduce using rule 99 (empty)]
    MINUS     [reduce using rule 99 (empty)]
    $default  reduce using rule 99 (empty)

    exp             转到状态 110
    lvalue          转到状态 25
    no_value_exp    转到状态 26
    nil             转到状态 27
    list            转到状态 28
    int             转到状态 29
    string          转到状态 30
    function        转到状态 31
    operation       转到状态 32
    exp_operation   转到状态 33
    bool_operation  转到状态 34
    compare         转到状态 35
    exp_compare     转到状态 36
    string_compare  转到状态 37
    assign          转到状态 38
    if_then         转到状态 39
    if_then_else    转到状态 40
    while_do        转到状态 41
    for_to_do       转到状态 42
    break           转到状态 43
    let_in_end      转到状态 44
    parentheses     转到状态 45
    empty           转到状态 46


State 85

   69 exp_compare: exp compare_op . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACK  shift, and go to state 56
    LBRACE  shift, and go to state 6
    MINUS   shift, and go to state 7
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    LET     shift, and go to state 12
    BREAK   shift, and go to state 13
    NIL     shift, and go to state 14

    LBRACK    [reduce using rule 99 (empty)]
    MINUS     [reduce using rule 99 (empty)]
    $default  reduce using rule 99 (empty)

    exp             转到状态 111
    lvalue          转到状态 25
    no_value_exp    转到状态 26
    nil             转到状态 27
    list            转到状态 28
    int             转到状态 29
    string          转到状态 30
    function        转到状态 31
    operation       转到状态 32
    exp_operation   转到状态 33
    bool_operation  转到状态 34
    compare         转到状态 35
    exp_compare     转到状态 36
    string_compare  转到状态 37
    assign          转到状态 38
    if_then         转到状态 39
    if_then_else    转到状态 40
    while_do        转到状态 41
    for_to_do       转到状态 42
    break           转到状态 43
    let_in_end      转到状态 44
    parentheses     转到状态 45
    empty           转到状态 46


State 86

   41 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACK  shift, and go to state 56
    LBRACE  shift, and go to state 6
    MINUS   shift, and go to state 7
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    LET     shift, and go to state 12
    BREAK   shift, and go to state 13
    NIL     shift, and go to state 14

    MINUS     [reduce using rule 99 (empty)]
    $default  reduce using rule 99 (empty)

    exp             转到状态 112
    lvalue          转到状态 25
    no_value_exp    转到状态 26
    nil             转到状态 27
    list            转到状态 28
    int             转到状态 29
    string          转到状态 30
    function        转到状态 31
    operation       转到状态 32
    exp_operation   转到状态 33
    bool_operation  转到状态 34
    compare         转到状态 35
    exp_compare     转到状态 36
    string_compare  转到状态 37
    assign          转到状态 38
    if_then         转到状态 39
    if_then_else    转到状态 40
    while_do        转到状态 41
    for_to_do       转到状态 42
    break           转到状态 43
    let_in_end      转到状态 44
    parentheses     转到状态 45
    empty           转到状态 46


State 87

   40 lvalue: lvalue DOT . ID

    ID  shift, and go to state 113


State 88

   88 assign: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACK  shift, and go to state 56
    LBRACE  shift, and go to state 6
    MINUS   shift, and go to state 7
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    LET     shift, and go to state 12
    BREAK   shift, and go to state 13
    NIL     shift, and go to state 14

    LBRACK    [reduce using rule 99 (empty)]
    MINUS     [reduce using rule 99 (empty)]
    $default  reduce using rule 99 (empty)

    exp             转到状态 114
    lvalue          转到状态 25
    no_value_exp    转到状态 26
    nil             转到状态 27
    list            转到状态 28
    int             转到状态 29
    string          转到状态 30
    function        转到状态 31
    operation       转到状态 32
    exp_operation   转到状态 33
    bool_operation  转到状态 34
    compare         转到状态 35
    exp_compare     转到状态 36
    string_compare  转到状态 37
    assign          转到状态 38
    if_then         转到状态 39
    if_then_else    转到状态 40
    while_do        转到状态 41
    for_to_do       转到状态 42
    break           转到状态 43
    let_in_end      转到状态 44
    parentheses     转到状态 45
    empty           转到状态 46


State 89

   53 function: ID LPAREN RPAREN .

    $default  reduce using rule 53 (function)


State 90

   56 function_exps: exp .
   59 exp_operation: exp . exp_op exp
   64 bool_operation: exp . bool_op exp
   69 exp_compare: exp . compare_op exp

    PLUS    shift, and go to state 77
    MINUS   shift, and go to state 78
    TIMES   shift, and go to state 79
    DIVIDE  shift, and go to state 80
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 81
    OR      shift, and go to state 82

    $default  reduce using rule 56 (function_exps)

    exp_op      转到状态 83
    bool_op     转到状态 84
    compare_op  转到状态 85


State 91

   54 function: ID LPAREN function_exps . RPAREN
   55 function_exps: function_exps . COMMA exp

    COMMA   shift, and go to state 115
    RPAREN  shift, and go to state 116


State 92

   70 string_compare: STRING compare_op STRING .

    $default  reduce using rule 70 (string_compare)


State 93

   49 list_exps: exp SEMICOLON . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACK  shift, and go to state 56
    LBRACE  shift, and go to state 6
    MINUS   shift, and go to state 7
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    LET     shift, and go to state 12
    BREAK   shift, and go to state 13
    NIL     shift, and go to state 14

    MINUS     [reduce using rule 99 (empty)]
    $default  reduce using rule 99 (empty)

    exp             转到状态 117
    lvalue          转到状态 25
    no_value_exp    转到状态 26
    nil             转到状态 27
    list            转到状态 28
    int             转到状态 29
    string          转到状态 30
    function        转到状态 31
    operation       转到状态 32
    exp_operation   转到状态 33
    bool_operation  转到状态 34
    compare         转到状态 35
    exp_compare     转到状态 36
    string_compare  转到状态 37
    assign          转到状态 38
    if_then         转到状态 39
    if_then_else    转到状态 40
    while_do        转到状态 41
    for_to_do       转到状态 42
    break           转到状态 43
    let_in_end      转到状态 44
    parentheses     转到状态 45
    empty           转到状态 46


State 94

   98 parentheses: LPAREN exp RPAREN .

    $default  reduce using rule 98 (parentheses)


State 95

   48 list_exps: list_exps SEMICOLON . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACK  shift, and go to state 56
    LBRACE  shift, and go to state 6
    MINUS   shift, and go to state 7
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    LET     shift, and go to state 12
    BREAK   shift, and go to state 13
    NIL     shift, and go to state 14

    MINUS     [reduce using rule 99 (empty)]
    $default  reduce using rule 99 (empty)

    exp             转到状态 118
    lvalue          转到状态 25
    no_value_exp    转到状态 26
    nil             转到状态 27
    list            转到状态 28
    int             转到状态 29
    string          转到状态 30
    function        转到状态 31
    operation       转到状态 32
    exp_operation   转到状态 33
    bool_operation  转到状态 34
    compare         转到状态 35
    exp_compare     转到状态 36
    string_compare  转到状态 37
    assign          转到状态 38
    if_then         转到状态 39
    if_then_else    转到状态 40
    while_do        转到状态 41
    for_to_do       转到状态 42
    break           转到状态 43
    let_in_end      转到状态 44
    parentheses     转到状态 45
    empty           转到状态 46


State 96

   47 list: LPAREN list_exps RPAREN .

    $default  reduce using rule 47 (list)


State 97

   16 tyfield: ID COLON . ID

    ID  shift, and go to state 119


State 98

   14 tyfields: tyfields COMMA . tyfield

    ID  shift, and go to state 59

    $default  reduce using rule 99 (empty)

    tyfield  转到状态 120
    empty    转到状态 63


State 99

    9 tydec: LBRACK tyfields RBRACK .

    $default  reduce using rule 9 (tydec)


State 100

   10 tydec: ARRAY OF ID .

    $default  reduce using rule 10 (tydec)


State 101

   89 if_then: IF exp THEN . exp
   90 if_then_else: IF exp THEN . exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACK  shift, and go to state 56
    LBRACE  shift, and go to state 6
    MINUS   shift, and go to state 7
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    LET     shift, and go to state 12
    BREAK   shift, and go to state 13
    NIL     shift, and go to state 14

    LBRACK    [reduce using rule 99 (empty)]
    MINUS     [reduce using rule 99 (empty)]
    $default  reduce using rule 99 (empty)

    exp             转到状态 121
    lvalue          转到状态 25
    no_value_exp    转到状态 26
    nil             转到状态 27
    list            转到状态 28
    int             转到状态 29
    string          转到状态 30
    function        转到状态 31
    operation       转到状态 32
    exp_operation   转到状态 33
    bool_operation  转到状态 34
    compare         转到状态 35
    exp_compare     转到状态 36
    string_compare  转到状态 37
    assign          转到状态 38
    if_then         转到状态 39
    if_then_else    转到状态 40
    while_do        转到状态 41
    for_to_do       转到状态 42
    break           转到状态 43
    let_in_end      转到状态 44
    parentheses     转到状态 45
    empty           转到状态 46


State 102

   91 while_do: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACK  shift, and go to state 56
    LBRACE  shift, and go to state 6
    MINUS   shift, and go to state 7
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    LET     shift, and go to state 12
    BREAK   shift, and go to state 13
    NIL     shift, and go to state 14

    LBRACK    [reduce using rule 99 (empty)]
    MINUS     [reduce using rule 99 (empty)]
    $default  reduce using rule 99 (empty)

    exp             转到状态 122
    lvalue          转到状态 25
    no_value_exp    转到状态 26
    nil             转到状态 27
    list            转到状态 28
    int             转到状态 29
    string          转到状态 30
    function        转到状态 31
    operation       转到状态 32
    exp_operation   转到状态 33
    bool_operation  转到状态 34
    compare         转到状态 35
    exp_compare     转到状态 36
    string_compare  转到状态 37
    assign          转到状态 38
    if_then         转到状态 39
    if_then_else    转到状态 40
    while_do        转到状态 41
    for_to_do       转到状态 42
    break           转到状态 43
    let_in_end      转到状态 44
    parentheses     转到状态 45
    empty           转到状态 46


State 103

   92 for_to_do: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACK  shift, and go to state 56
    LBRACE  shift, and go to state 6
    MINUS   shift, and go to state 7
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    LET     shift, and go to state 12
    BREAK   shift, and go to state 13
    NIL     shift, and go to state 14

    MINUS     [reduce using rule 99 (empty)]
    $default  reduce using rule 99 (empty)

    exp             转到状态 123
    lvalue          转到状态 25
    no_value_exp    转到状态 26
    nil             转到状态 27
    list            转到状态 28
    int             转到状态 29
    string          转到状态 30
    function        转到状态 31
    operation       转到状态 32
    exp_operation   转到状态 33
    bool_operation  转到状态 34
    compare         转到状态 35
    exp_compare     转到状态 36
    string_compare  转到状态 37
    assign          转到状态 38
    if_then         转到状态 39
    if_then_else    转到状态 40
    while_do        转到状态 41
    for_to_do       转到状态 42
    break           转到状态 43
    let_in_end      转到状态 44
    parentheses     转到状态 45
    empty           转到状态 46


State 104

   94 let_in_end: LET decs IN . expseq END
   95           | LET decs IN . END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACK  shift, and go to state 56
    LBRACE  shift, and go to state 6
    MINUS   shift, and go to state 7
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    LET     shift, and go to state 12
    END     shift, and go to state 124
    BREAK   shift, and go to state 13
    NIL     shift, and go to state 14

    MINUS     [reduce using rule 99 (empty)]
    END       [reduce using rule 99 (empty)]
    $default  reduce using rule 99 (empty)

    exp             转到状态 125
    lvalue          转到状态 25
    no_value_exp    转到状态 26
    nil             转到状态 27
    list            转到状态 28
    int             转到状态 29
    string          转到状态 30
    function        转到状态 31
    operation       转到状态 32
    exp_operation   转到状态 33
    bool_operation  转到状态 34
    compare         转到状态 35
    exp_compare     转到状态 36
    string_compare  转到状态 37
    assign          转到状态 38
    if_then         转到状态 39
    if_then_else    转到状态 40
    while_do        转到状态 41
    for_to_do       转到状态 42
    break           转到状态 43
    let_in_end      转到状态 44
    expseq          转到状态 126
    parentheses     转到状态 45
    empty           转到状态 46


State 105

   20 fundec: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   21       | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 59

    $default  reduce using rule 99 (empty)

    tyfields  转到状态 127
    tyfield   转到状态 62
    empty     转到状态 63


State 106

   19 vardec: VAR ID COLON . ID ASSIGN new

    ID  shift, and go to state 128


State 107

   18 vardec: VAR ID ASSIGN . new

    ID      shift, and go to state 129
    STRING  shift, and go to state 130
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 131
    MINUS   shift, and go to state 7
    NIL     shift, and go to state 14

    nil          转到状态 132
    int          转到状态 133
    string       转到状态 134
    new          转到状态 135
    type_new     转到状态 136
    array_new    转到状态 137
    parentheses  转到状态 138


State 108

    8 tydec: TYPE ID EQ . ty

    ID      shift, and go to state 139
    LBRACE  shift, and go to state 140
    ARRAY   shift, and go to state 141

    ty  转到状态 142


State 109

   59 exp_operation: exp . exp_op exp
   59              | exp exp_op exp .
   64 bool_operation: exp . bool_op exp
   69 exp_compare: exp . compare_op exp

    PLUS    shift, and go to state 77
    MINUS   shift, and go to state 78
    TIMES   shift, and go to state 79
    DIVIDE  shift, and go to state 80
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 81
    OR      shift, and go to state 82

    PLUS      [reduce using rule 59 (exp_operation)]
    MINUS     [reduce using rule 59 (exp_operation)]
    TIMES     [reduce using rule 59 (exp_operation)]
    DIVIDE    [reduce using rule 59 (exp_operation)]
    EQ        [reduce using rule 59 (exp_operation)]
    NEQ       [reduce using rule 59 (exp_operation)]
    LT        [reduce using rule 59 (exp_operation)]
    LE        [reduce using rule 59 (exp_operation)]
    GT        [reduce using rule 59 (exp_operation)]
    GE        [reduce using rule 59 (exp_operation)]
    AND       [reduce using rule 59 (exp_operation)]
    OR        [reduce using rule 59 (exp_operation)]
    $default  reduce using rule 59 (exp_operation)

    exp_op      转到状态 83
    bool_op     转到状态 84
    compare_op  转到状态 85


State 110

   59 exp_operation: exp . exp_op exp
   64 bool_operation: exp . bool_op exp
   64               | exp bool_op exp .
   69 exp_compare: exp . compare_op exp

    PLUS    shift, and go to state 77
    MINUS   shift, and go to state 78
    TIMES   shift, and go to state 79
    DIVIDE  shift, and go to state 80
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 81
    OR      shift, and go to state 82

    PLUS      [reduce using rule 64 (bool_operation)]
    MINUS     [reduce using rule 64 (bool_operation)]
    TIMES     [reduce using rule 64 (bool_operation)]
    DIVIDE    [reduce using rule 64 (bool_operation)]
    EQ        [reduce using rule 64 (bool_operation)]
    NEQ       [reduce using rule 64 (bool_operation)]
    LT        [reduce using rule 64 (bool_operation)]
    LE        [reduce using rule 64 (bool_operation)]
    GT        [reduce using rule 64 (bool_operation)]
    GE        [reduce using rule 64 (bool_operation)]
    AND       [reduce using rule 64 (bool_operation)]
    OR        [reduce using rule 64 (bool_operation)]
    $default  reduce using rule 64 (bool_operation)

    exp_op      转到状态 83
    bool_op     转到状态 84
    compare_op  转到状态 85


State 111

   59 exp_operation: exp . exp_op exp
   64 bool_operation: exp . bool_op exp
   69 exp_compare: exp . compare_op exp
   69            | exp compare_op exp .

    PLUS    shift, and go to state 77
    MINUS   shift, and go to state 78
    TIMES   shift, and go to state 79
    DIVIDE  shift, and go to state 80
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 81
    OR      shift, and go to state 82

    PLUS      [reduce using rule 69 (exp_compare)]
    MINUS     [reduce using rule 69 (exp_compare)]
    TIMES     [reduce using rule 69 (exp_compare)]
    DIVIDE    [reduce using rule 69 (exp_compare)]
    EQ        [reduce using rule 69 (exp_compare)]
    NEQ       [reduce using rule 69 (exp_compare)]
    LT        [reduce using rule 69 (exp_compare)]
    LE        [reduce using rule 69 (exp_compare)]
    GT        [reduce using rule 69 (exp_compare)]
    GE        [reduce using rule 69 (exp_compare)]
    AND       [reduce using rule 69 (exp_compare)]
    OR        [reduce using rule 69 (exp_compare)]
    $default  reduce using rule 69 (exp_compare)

    exp_op      转到状态 83
    bool_op     转到状态 84
    compare_op  转到状态 85


State 112

   41 lvalue: lvalue LBRACK exp . RBRACK
   59 exp_operation: exp . exp_op exp
   64 bool_operation: exp . bool_op exp
   69 exp_compare: exp . compare_op exp

    RBRACK  shift, and go to state 143
    PLUS    shift, and go to state 77
    MINUS   shift, and go to state 78
    TIMES   shift, and go to state 79
    DIVIDE  shift, and go to state 80
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 81
    OR      shift, and go to state 82

    exp_op      转到状态 83
    bool_op     转到状态 84
    compare_op  转到状态 85


State 113

   40 lvalue: lvalue DOT ID .

    $default  reduce using rule 40 (lvalue)


State 114

   59 exp_operation: exp . exp_op exp
   64 bool_operation: exp . bool_op exp
   69 exp_compare: exp . compare_op exp
   88 assign: lvalue ASSIGN exp .

    PLUS    shift, and go to state 77
    MINUS   shift, and go to state 78
    TIMES   shift, and go to state 79
    DIVIDE  shift, and go to state 80
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 81
    OR      shift, and go to state 82

    PLUS      [reduce using rule 88 (assign)]
    MINUS     [reduce using rule 88 (assign)]
    TIMES     [reduce using rule 88 (assign)]
    DIVIDE    [reduce using rule 88 (assign)]
    EQ        [reduce using rule 88 (assign)]
    NEQ       [reduce using rule 88 (assign)]
    LT        [reduce using rule 88 (assign)]
    LE        [reduce using rule 88 (assign)]
    GT        [reduce using rule 88 (assign)]
    GE        [reduce using rule 88 (assign)]
    AND       [reduce using rule 88 (assign)]
    OR        [reduce using rule 88 (assign)]
    $default  reduce using rule 88 (assign)

    exp_op      转到状态 83
    bool_op     转到状态 84
    compare_op  转到状态 85


State 115

   55 function_exps: function_exps COMMA . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACK  shift, and go to state 56
    LBRACE  shift, and go to state 6
    MINUS   shift, and go to state 7
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    LET     shift, and go to state 12
    BREAK   shift, and go to state 13
    NIL     shift, and go to state 14

    MINUS     [reduce using rule 99 (empty)]
    $default  reduce using rule 99 (empty)

    exp             转到状态 144
    lvalue          转到状态 25
    no_value_exp    转到状态 26
    nil             转到状态 27
    list            转到状态 28
    int             转到状态 29
    string          转到状态 30
    function        转到状态 31
    operation       转到状态 32
    exp_operation   转到状态 33
    bool_operation  转到状态 34
    compare         转到状态 35
    exp_compare     转到状态 36
    string_compare  转到状态 37
    assign          转到状态 38
    if_then         转到状态 39
    if_then_else    转到状态 40
    while_do        转到状态 41
    for_to_do       转到状态 42
    break           转到状态 43
    let_in_end      转到状态 44
    parentheses     转到状态 45
    empty           转到状态 46


State 116

   54 function: ID LPAREN function_exps RPAREN .

    $default  reduce using rule 54 (function)


State 117

   49 list_exps: exp SEMICOLON exp .
   59 exp_operation: exp . exp_op exp
   64 bool_operation: exp . bool_op exp
   69 exp_compare: exp . compare_op exp

    PLUS    shift, and go to state 77
    MINUS   shift, and go to state 78
    TIMES   shift, and go to state 79
    DIVIDE  shift, and go to state 80
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 81
    OR      shift, and go to state 82

    $default  reduce using rule 49 (list_exps)

    exp_op      转到状态 83
    bool_op     转到状态 84
    compare_op  转到状态 85


State 118

   48 list_exps: list_exps SEMICOLON exp .
   59 exp_operation: exp . exp_op exp
   64 bool_operation: exp . bool_op exp
   69 exp_compare: exp . compare_op exp

    PLUS    shift, and go to state 77
    MINUS   shift, and go to state 78
    TIMES   shift, and go to state 79
    DIVIDE  shift, and go to state 80
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 81
    OR      shift, and go to state 82

    $default  reduce using rule 48 (list_exps)

    exp_op      转到状态 83
    bool_op     转到状态 84
    compare_op  转到状态 85


State 119

   16 tyfield: ID COLON ID .

    $default  reduce using rule 16 (tyfield)


State 120

   14 tyfields: tyfields COMMA tyfield .

    $default  reduce using rule 14 (tyfields)


State 121

   59 exp_operation: exp . exp_op exp
   64 bool_operation: exp . bool_op exp
   69 exp_compare: exp . compare_op exp
   89 if_then: IF exp THEN exp .
   90 if_then_else: IF exp THEN exp . ELSE exp

    PLUS    shift, and go to state 77
    MINUS   shift, and go to state 78
    TIMES   shift, and go to state 79
    DIVIDE  shift, and go to state 80
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 81
    OR      shift, and go to state 82
    ELSE    shift, and go to state 145

    PLUS      [reduce using rule 89 (if_then)]
    MINUS     [reduce using rule 89 (if_then)]
    TIMES     [reduce using rule 89 (if_then)]
    DIVIDE    [reduce using rule 89 (if_then)]
    EQ        [reduce using rule 89 (if_then)]
    NEQ       [reduce using rule 89 (if_then)]
    LT        [reduce using rule 89 (if_then)]
    LE        [reduce using rule 89 (if_then)]
    GT        [reduce using rule 89 (if_then)]
    GE        [reduce using rule 89 (if_then)]
    AND       [reduce using rule 89 (if_then)]
    OR        [reduce using rule 89 (if_then)]
    $default  reduce using rule 89 (if_then)

    exp_op      转到状态 83
    bool_op     转到状态 84
    compare_op  转到状态 85


State 122

   59 exp_operation: exp . exp_op exp
   64 bool_operation: exp . bool_op exp
   69 exp_compare: exp . compare_op exp
   91 while_do: WHILE exp DO exp .

    PLUS    shift, and go to state 77
    MINUS   shift, and go to state 78
    TIMES   shift, and go to state 79
    DIVIDE  shift, and go to state 80
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 81
    OR      shift, and go to state 82

    PLUS      [reduce using rule 91 (while_do)]
    MINUS     [reduce using rule 91 (while_do)]
    TIMES     [reduce using rule 91 (while_do)]
    DIVIDE    [reduce using rule 91 (while_do)]
    EQ        [reduce using rule 91 (while_do)]
    NEQ       [reduce using rule 91 (while_do)]
    LT        [reduce using rule 91 (while_do)]
    LE        [reduce using rule 91 (while_do)]
    GT        [reduce using rule 91 (while_do)]
    GE        [reduce using rule 91 (while_do)]
    AND       [reduce using rule 91 (while_do)]
    OR        [reduce using rule 91 (while_do)]
    $default  reduce using rule 91 (while_do)

    exp_op      转到状态 83
    bool_op     转到状态 84
    compare_op  转到状态 85


State 123

   59 exp_operation: exp . exp_op exp
   64 bool_operation: exp . bool_op exp
   69 exp_compare: exp . compare_op exp
   92 for_to_do: FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 77
    MINUS   shift, and go to state 78
    TIMES   shift, and go to state 79
    DIVIDE  shift, and go to state 80
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 81
    OR      shift, and go to state 82
    TO      shift, and go to state 146

    exp_op      转到状态 83
    bool_op     转到状态 84
    compare_op  转到状态 85


State 124

   95 let_in_end: LET decs IN END .

    $default  reduce using rule 95 (let_in_end)


State 125

   59 exp_operation: exp . exp_op exp
   64 bool_operation: exp . bool_op exp
   69 exp_compare: exp . compare_op exp
   97 expseq: exp .

    PLUS    shift, and go to state 77
    MINUS   shift, and go to state 78
    TIMES   shift, and go to state 79
    DIVIDE  shift, and go to state 80
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 81
    OR      shift, and go to state 82

    $default  reduce using rule 97 (expseq)

    exp_op      转到状态 83
    bool_op     转到状态 84
    compare_op  转到状态 85


State 126

   94 let_in_end: LET decs IN expseq . END
   96 expseq: expseq . SEMICOLON exp

    SEMICOLON  shift, and go to state 147
    END        shift, and go to state 148


State 127

   14 tyfields: tyfields . COMMA tyfield
   20 fundec: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   21       | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    COMMA   shift, and go to state 98
    RPAREN  shift, and go to state 149


State 128

   19 vardec: VAR ID COLON ID . ASSIGN new

    ASSIGN  shift, and go to state 150


State 129

   83 type_new: ID . LBRACE type_new_exps RBRACE
   86 array_new: ID . LBRACK exp RBRACK OF exp
   87          | ID . LBRACK exp RBRACK OF new

    LBRACK  shift, and go to state 151
    LBRACE  shift, and go to state 152


State 130

   52 string: STRING .

    $default  reduce using rule 52 (string)


State 131

   98 parentheses: LPAREN . exp RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACK  shift, and go to state 56
    LBRACE  shift, and go to state 6
    MINUS   shift, and go to state 7
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    LET     shift, and go to state 12
    BREAK   shift, and go to state 13
    NIL     shift, and go to state 14

    MINUS     [reduce using rule 99 (empty)]
    $default  reduce using rule 99 (empty)

    exp             转到状态 153
    lvalue          转到状态 25
    no_value_exp    转到状态 26
    nil             转到状态 27
    list            转到状态 28
    int             转到状态 29
    string          转到状态 30
    function        转到状态 31
    operation       转到状态 32
    exp_operation   转到状态 33
    bool_operation  转到状态 34
    compare         转到状态 35
    exp_compare     转到状态 36
    string_compare  转到状态 37
    assign          转到状态 38
    if_then         转到状态 39
    if_then_else    转到状态 40
    while_do        转到状态 41
    for_to_do       转到状态 42
    break           转到状态 43
    let_in_end      转到状态 44
    parentheses     转到状态 45
    empty           转到状态 46


State 132

   82 new: nil .

    $default  reduce using rule 82 (new)


State 133

   79 new: int .

    $default  reduce using rule 79 (new)


State 134

   80 new: string .

    $default  reduce using rule 80 (new)


State 135

   18 vardec: VAR ID ASSIGN new .

    $default  reduce using rule 18 (vardec)


State 136

   77 new: type_new .

    $default  reduce using rule 77 (new)


State 137

   78 new: array_new .

    $default  reduce using rule 78 (new)


State 138

   81 new: parentheses .

    $default  reduce using rule 81 (new)


State 139

   11 ty: ID .

    $default  reduce using rule 11 (ty)


State 140

   13 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 59

    $default  reduce using rule 99 (empty)

    tyfields  转到状态 154
    tyfield   转到状态 62
    empty     转到状态 63


State 141

   12 ty: ARRAY . OF ID

    OF  shift, and go to state 155


State 142

    8 tydec: TYPE ID EQ ty .

    $default  reduce using rule 8 (tydec)


State 143

   41 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 41 (lvalue)


State 144

   55 function_exps: function_exps COMMA exp .
   59 exp_operation: exp . exp_op exp
   64 bool_operation: exp . bool_op exp
   69 exp_compare: exp . compare_op exp

    PLUS    shift, and go to state 77
    MINUS   shift, and go to state 78
    TIMES   shift, and go to state 79
    DIVIDE  shift, and go to state 80
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 81
    OR      shift, and go to state 82

    $default  reduce using rule 55 (function_exps)

    exp_op      转到状态 83
    bool_op     转到状态 84
    compare_op  转到状态 85


State 145

   90 if_then_else: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACK  shift, and go to state 56
    LBRACE  shift, and go to state 6
    MINUS   shift, and go to state 7
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    LET     shift, and go to state 12
    BREAK   shift, and go to state 13
    NIL     shift, and go to state 14

    LBRACK    [reduce using rule 99 (empty)]
    MINUS     [reduce using rule 99 (empty)]
    $default  reduce using rule 99 (empty)

    exp             转到状态 156
    lvalue          转到状态 25
    no_value_exp    转到状态 26
    nil             转到状态 27
    list            转到状态 28
    int             转到状态 29
    string          转到状态 30
    function        转到状态 31
    operation       转到状态 32
    exp_operation   转到状态 33
    bool_operation  转到状态 34
    compare         转到状态 35
    exp_compare     转到状态 36
    string_compare  转到状态 37
    assign          转到状态 38
    if_then         转到状态 39
    if_then_else    转到状态 40
    while_do        转到状态 41
    for_to_do       转到状态 42
    break           转到状态 43
    let_in_end      转到状态 44
    parentheses     转到状态 45
    empty           转到状态 46


State 146

   92 for_to_do: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACK  shift, and go to state 56
    LBRACE  shift, and go to state 6
    MINUS   shift, and go to state 7
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    LET     shift, and go to state 12
    BREAK   shift, and go to state 13
    NIL     shift, and go to state 14

    MINUS     [reduce using rule 99 (empty)]
    $default  reduce using rule 99 (empty)

    exp             转到状态 157
    lvalue          转到状态 25
    no_value_exp    转到状态 26
    nil             转到状态 27
    list            转到状态 28
    int             转到状态 29
    string          转到状态 30
    function        转到状态 31
    operation       转到状态 32
    exp_operation   转到状态 33
    bool_operation  转到状态 34
    compare         转到状态 35
    exp_compare     转到状态 36
    string_compare  转到状态 37
    assign          转到状态 38
    if_then         转到状态 39
    if_then_else    转到状态 40
    while_do        转到状态 41
    for_to_do       转到状态 42
    break           转到状态 43
    let_in_end      转到状态 44
    parentheses     转到状态 45
    empty           转到状态 46


State 147

   96 expseq: expseq SEMICOLON . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACK  shift, and go to state 56
    LBRACE  shift, and go to state 6
    MINUS   shift, and go to state 7
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    LET     shift, and go to state 12
    BREAK   shift, and go to state 13
    NIL     shift, and go to state 14

    MINUS     [reduce using rule 99 (empty)]
    $default  reduce using rule 99 (empty)

    exp             转到状态 158
    lvalue          转到状态 25
    no_value_exp    转到状态 26
    nil             转到状态 27
    list            转到状态 28
    int             转到状态 29
    string          转到状态 30
    function        转到状态 31
    operation       转到状态 32
    exp_operation   转到状态 33
    bool_operation  转到状态 34
    compare         转到状态 35
    exp_compare     转到状态 36
    string_compare  转到状态 37
    assign          转到状态 38
    if_then         转到状态 39
    if_then_else    转到状态 40
    while_do        转到状态 41
    for_to_do       转到状态 42
    break           转到状态 43
    let_in_end      转到状态 44
    parentheses     转到状态 45
    empty           转到状态 46


State 148

   94 let_in_end: LET decs IN expseq END .

    $default  reduce using rule 94 (let_in_end)


State 149

   20 fundec: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   21       | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 159
    EQ     shift, and go to state 160


State 150

   19 vardec: VAR ID COLON ID ASSIGN . new

    ID      shift, and go to state 129
    STRING  shift, and go to state 130
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 131
    MINUS   shift, and go to state 7
    NIL     shift, and go to state 14

    nil          转到状态 132
    int          转到状态 133
    string       转到状态 134
    new          转到状态 161
    type_new     转到状态 136
    array_new    转到状态 137
    parentheses  转到状态 138


State 151

   86 array_new: ID LBRACK . exp RBRACK OF exp
   87          | ID LBRACK . exp RBRACK OF new

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACK  shift, and go to state 56
    LBRACE  shift, and go to state 6
    MINUS   shift, and go to state 7
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    LET     shift, and go to state 12
    BREAK   shift, and go to state 13
    NIL     shift, and go to state 14

    MINUS     [reduce using rule 99 (empty)]
    $default  reduce using rule 99 (empty)

    exp             转到状态 162
    lvalue          转到状态 25
    no_value_exp    转到状态 26
    nil             转到状态 27
    list            转到状态 28
    int             转到状态 29
    string          转到状态 30
    function        转到状态 31
    operation       转到状态 32
    exp_operation   转到状态 33
    bool_operation  转到状态 34
    compare         转到状态 35
    exp_compare     转到状态 36
    string_compare  转到状态 37
    assign          转到状态 38
    if_then         转到状态 39
    if_then_else    转到状态 40
    while_do        转到状态 41
    for_to_do       转到状态 42
    break           转到状态 43
    let_in_end      转到状态 44
    parentheses     转到状态 45
    empty           转到状态 46


State 152

   83 type_new: ID LBRACE . type_new_exps RBRACE

    ID  shift, and go to state 163

    type_new_exps  转到状态 164


State 153

   59 exp_operation: exp . exp_op exp
   64 bool_operation: exp . bool_op exp
   69 exp_compare: exp . compare_op exp
   98 parentheses: LPAREN exp . RPAREN

    RPAREN  shift, and go to state 94
    PLUS    shift, and go to state 77
    MINUS   shift, and go to state 78
    TIMES   shift, and go to state 79
    DIVIDE  shift, and go to state 80
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 81
    OR      shift, and go to state 82

    exp_op      转到状态 83
    bool_op     转到状态 84
    compare_op  转到状态 85


State 154

   13 ty: LBRACE tyfields . RBRACE
   14 tyfields: tyfields . COMMA tyfield

    COMMA   shift, and go to state 98
    RBRACE  shift, and go to state 165


State 155

   12 ty: ARRAY OF . ID

    ID  shift, and go to state 166


State 156

   59 exp_operation: exp . exp_op exp
   64 bool_operation: exp . bool_op exp
   69 exp_compare: exp . compare_op exp
   90 if_then_else: IF exp THEN exp ELSE exp .

    PLUS    shift, and go to state 77
    MINUS   shift, and go to state 78
    TIMES   shift, and go to state 79
    DIVIDE  shift, and go to state 80
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 81
    OR      shift, and go to state 82

    PLUS      [reduce using rule 90 (if_then_else)]
    MINUS     [reduce using rule 90 (if_then_else)]
    TIMES     [reduce using rule 90 (if_then_else)]
    DIVIDE    [reduce using rule 90 (if_then_else)]
    EQ        [reduce using rule 90 (if_then_else)]
    NEQ       [reduce using rule 90 (if_then_else)]
    LT        [reduce using rule 90 (if_then_else)]
    LE        [reduce using rule 90 (if_then_else)]
    GT        [reduce using rule 90 (if_then_else)]
    GE        [reduce using rule 90 (if_then_else)]
    AND       [reduce using rule 90 (if_then_else)]
    OR        [reduce using rule 90 (if_then_else)]
    $default  reduce using rule 90 (if_then_else)

    exp_op      转到状态 83
    bool_op     转到状态 84
    compare_op  转到状态 85


State 157

   59 exp_operation: exp . exp_op exp
   64 bool_operation: exp . bool_op exp
   69 exp_compare: exp . compare_op exp
   92 for_to_do: FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 77
    MINUS   shift, and go to state 78
    TIMES   shift, and go to state 79
    DIVIDE  shift, and go to state 80
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 81
    OR      shift, and go to state 82
    DO      shift, and go to state 167

    exp_op      转到状态 83
    bool_op     转到状态 84
    compare_op  转到状态 85


State 158

   59 exp_operation: exp . exp_op exp
   64 bool_operation: exp . bool_op exp
   69 exp_compare: exp . compare_op exp
   96 expseq: expseq SEMICOLON exp .

    PLUS    shift, and go to state 77
    MINUS   shift, and go to state 78
    TIMES   shift, and go to state 79
    DIVIDE  shift, and go to state 80
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 81
    OR      shift, and go to state 82

    $default  reduce using rule 96 (expseq)

    exp_op      转到状态 83
    bool_op     转到状态 84
    compare_op  转到状态 85


State 159

   21 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 168


State 160

   20 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACK  shift, and go to state 56
    LBRACE  shift, and go to state 6
    MINUS   shift, and go to state 7
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    LET     shift, and go to state 12
    BREAK   shift, and go to state 13
    NIL     shift, and go to state 14

    LBRACK    [reduce using rule 99 (empty)]
    MINUS     [reduce using rule 99 (empty)]
    $default  reduce using rule 99 (empty)

    exp             转到状态 169
    lvalue          转到状态 25
    no_value_exp    转到状态 26
    nil             转到状态 27
    list            转到状态 28
    int             转到状态 29
    string          转到状态 30
    function        转到状态 31
    operation       转到状态 32
    exp_operation   转到状态 33
    bool_operation  转到状态 34
    compare         转到状态 35
    exp_compare     转到状态 36
    string_compare  转到状态 37
    assign          转到状态 38
    if_then         转到状态 39
    if_then_else    转到状态 40
    while_do        转到状态 41
    for_to_do       转到状态 42
    break           转到状态 43
    let_in_end      转到状态 44
    parentheses     转到状态 45
    empty           转到状态 46


State 161

   19 vardec: VAR ID COLON ID ASSIGN new .

    $default  reduce using rule 19 (vardec)


State 162

   59 exp_operation: exp . exp_op exp
   64 bool_operation: exp . bool_op exp
   69 exp_compare: exp . compare_op exp
   86 array_new: ID LBRACK exp . RBRACK OF exp
   87          | ID LBRACK exp . RBRACK OF new

    RBRACK  shift, and go to state 170
    PLUS    shift, and go to state 77
    MINUS   shift, and go to state 78
    TIMES   shift, and go to state 79
    DIVIDE  shift, and go to state 80
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 81
    OR      shift, and go to state 82

    exp_op      转到状态 83
    bool_op     转到状态 84
    compare_op  转到状态 85


State 163

   85 type_new_exps: ID . EQ exp

    EQ  shift, and go to state 171


State 164

   83 type_new: ID LBRACE type_new_exps . RBRACE
   84 type_new_exps: type_new_exps . COMMA ID EQ exp

    COMMA   shift, and go to state 172
    RBRACE  shift, and go to state 173


State 165

   13 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 13 (ty)


State 166

   12 ty: ARRAY OF ID .

    $default  reduce using rule 12 (ty)


State 167

   92 for_to_do: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACK  shift, and go to state 56
    LBRACE  shift, and go to state 6
    MINUS   shift, and go to state 7
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    LET     shift, and go to state 12
    BREAK   shift, and go to state 13
    NIL     shift, and go to state 14

    LBRACK    [reduce using rule 99 (empty)]
    MINUS     [reduce using rule 99 (empty)]
    $default  reduce using rule 99 (empty)

    exp             转到状态 174
    lvalue          转到状态 25
    no_value_exp    转到状态 26
    nil             转到状态 27
    list            转到状态 28
    int             转到状态 29
    string          转到状态 30
    function        转到状态 31
    operation       转到状态 32
    exp_operation   转到状态 33
    bool_operation  转到状态 34
    compare         转到状态 35
    exp_compare     转到状态 36
    string_compare  转到状态 37
    assign          转到状态 38
    if_then         转到状态 39
    if_then_else    转到状态 40
    while_do        转到状态 41
    for_to_do       转到状态 42
    break           转到状态 43
    let_in_end      转到状态 44
    parentheses     转到状态 45
    empty           转到状态 46


State 168

   21 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 175


State 169

   20 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp .
   59 exp_operation: exp . exp_op exp
   64 bool_operation: exp . bool_op exp
   69 exp_compare: exp . compare_op exp

    PLUS    shift, and go to state 77
    MINUS   shift, and go to state 78
    TIMES   shift, and go to state 79
    DIVIDE  shift, and go to state 80
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 81
    OR      shift, and go to state 82

    $default  reduce using rule 20 (fundec)

    exp_op      转到状态 83
    bool_op     转到状态 84
    compare_op  转到状态 85


State 170

   86 array_new: ID LBRACK exp RBRACK . OF exp
   87          | ID LBRACK exp RBRACK . OF new

    OF  shift, and go to state 176


State 171

   85 type_new_exps: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACK  shift, and go to state 56
    LBRACE  shift, and go to state 6
    MINUS   shift, and go to state 7
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    LET     shift, and go to state 12
    BREAK   shift, and go to state 13
    NIL     shift, and go to state 14

    MINUS     [reduce using rule 99 (empty)]
    $default  reduce using rule 99 (empty)

    exp             转到状态 177
    lvalue          转到状态 25
    no_value_exp    转到状态 26
    nil             转到状态 27
    list            转到状态 28
    int             转到状态 29
    string          转到状态 30
    function        转到状态 31
    operation       转到状态 32
    exp_operation   转到状态 33
    bool_operation  转到状态 34
    compare         转到状态 35
    exp_compare     转到状态 36
    string_compare  转到状态 37
    assign          转到状态 38
    if_then         转到状态 39
    if_then_else    转到状态 40
    while_do        转到状态 41
    for_to_do       转到状态 42
    break           转到状态 43
    let_in_end      转到状态 44
    parentheses     转到状态 45
    empty           转到状态 46


State 172

   84 type_new_exps: type_new_exps COMMA . ID EQ exp

    ID  shift, and go to state 178


State 173

   83 type_new: ID LBRACE type_new_exps RBRACE .

    $default  reduce using rule 83 (type_new)


State 174

   59 exp_operation: exp . exp_op exp
   64 bool_operation: exp . bool_op exp
   69 exp_compare: exp . compare_op exp
   92 for_to_do: FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 77
    MINUS   shift, and go to state 78
    TIMES   shift, and go to state 79
    DIVIDE  shift, and go to state 80
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 81
    OR      shift, and go to state 82

    PLUS      [reduce using rule 92 (for_to_do)]
    MINUS     [reduce using rule 92 (for_to_do)]
    TIMES     [reduce using rule 92 (for_to_do)]
    DIVIDE    [reduce using rule 92 (for_to_do)]
    EQ        [reduce using rule 92 (for_to_do)]
    NEQ       [reduce using rule 92 (for_to_do)]
    LT        [reduce using rule 92 (for_to_do)]
    LE        [reduce using rule 92 (for_to_do)]
    GT        [reduce using rule 92 (for_to_do)]
    GE        [reduce using rule 92 (for_to_do)]
    AND       [reduce using rule 92 (for_to_do)]
    OR        [reduce using rule 92 (for_to_do)]
    $default  reduce using rule 92 (for_to_do)

    exp_op      转到状态 83
    bool_op     转到状态 84
    compare_op  转到状态 85


State 175

   21 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACK  shift, and go to state 56
    LBRACE  shift, and go to state 6
    MINUS   shift, and go to state 7
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    LET     shift, and go to state 12
    BREAK   shift, and go to state 13
    NIL     shift, and go to state 14

    LBRACK    [reduce using rule 99 (empty)]
    MINUS     [reduce using rule 99 (empty)]
    $default  reduce using rule 99 (empty)

    exp             转到状态 179
    lvalue          转到状态 25
    no_value_exp    转到状态 26
    nil             转到状态 27
    list            转到状态 28
    int             转到状态 29
    string          转到状态 30
    function        转到状态 31
    operation       转到状态 32
    exp_operation   转到状态 33
    bool_operation  转到状态 34
    compare         转到状态 35
    exp_compare     转到状态 36
    string_compare  转到状态 37
    assign          转到状态 38
    if_then         转到状态 39
    if_then_else    转到状态 40
    while_do        转到状态 41
    for_to_do       转到状态 42
    break           转到状态 43
    let_in_end      转到状态 44
    parentheses     转到状态 45
    empty           转到状态 46


State 176

   86 array_new: ID LBRACK exp RBRACK OF . exp
   87          | ID LBRACK exp RBRACK OF . new

    ID      shift, and go to state 180
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACK  shift, and go to state 56
    LBRACE  shift, and go to state 6
    MINUS   shift, and go to state 7
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    LET     shift, and go to state 12
    BREAK   shift, and go to state 13
    NIL     shift, and go to state 14

    LBRACK    [reduce using rule 99 (empty)]
    MINUS     [reduce using rule 99 (empty)]
    $default  reduce using rule 99 (empty)

    exp             转到状态 181
    lvalue          转到状态 25
    no_value_exp    转到状态 26
    nil             转到状态 182
    list            转到状态 28
    int             转到状态 183
    string          转到状态 184
    function        转到状态 31
    operation       转到状态 32
    exp_operation   转到状态 33
    bool_operation  转到状态 34
    compare         转到状态 35
    exp_compare     转到状态 36
    string_compare  转到状态 37
    new             转到状态 185
    type_new        转到状态 136
    array_new       转到状态 137
    assign          转到状态 38
    if_then         转到状态 39
    if_then_else    转到状态 40
    while_do        转到状态 41
    for_to_do       转到状态 42
    break           转到状态 43
    let_in_end      转到状态 44
    parentheses     转到状态 186
    empty           转到状态 46


State 177

   59 exp_operation: exp . exp_op exp
   64 bool_operation: exp . bool_op exp
   69 exp_compare: exp . compare_op exp
   85 type_new_exps: ID EQ exp .

    PLUS    shift, and go to state 77
    MINUS   shift, and go to state 78
    TIMES   shift, and go to state 79
    DIVIDE  shift, and go to state 80
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 81
    OR      shift, and go to state 82

    $default  reduce using rule 85 (type_new_exps)

    exp_op      转到状态 83
    bool_op     转到状态 84
    compare_op  转到状态 85


State 178

   84 type_new_exps: type_new_exps COMMA ID . EQ exp

    EQ  shift, and go to state 187


State 179

   21 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .
   59 exp_operation: exp . exp_op exp
   64 bool_operation: exp . bool_op exp
   69 exp_compare: exp . compare_op exp

    PLUS    shift, and go to state 77
    MINUS   shift, and go to state 78
    TIMES   shift, and go to state 79
    DIVIDE  shift, and go to state 80
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 81
    OR      shift, and go to state 82

    $default  reduce using rule 21 (fundec)

    exp_op      转到状态 83
    bool_op     转到状态 84
    compare_op  转到状态 85


State 180

   39 lvalue: ID .
   53 function: ID . LPAREN RPAREN
   54         | ID . LPAREN function_exps RPAREN
   83 type_new: ID . LBRACE type_new_exps RBRACE
   86 array_new: ID . LBRACK exp RBRACK OF exp
   87          | ID . LBRACK exp RBRACK OF new

    LPAREN  shift, and go to state 47
    LBRACK  shift, and go to state 151
    LBRACE  shift, and go to state 152

    LBRACK    [reduce using rule 39 (lvalue)]
    $default  reduce using rule 39 (lvalue)


State 181

   59 exp_operation: exp . exp_op exp
   64 bool_operation: exp . bool_op exp
   69 exp_compare: exp . compare_op exp
   86 array_new: ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 77
    MINUS   shift, and go to state 78
    TIMES   shift, and go to state 79
    DIVIDE  shift, and go to state 80
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 81
    OR      shift, and go to state 82

    $default  reduce using rule 86 (array_new)

    exp_op      转到状态 83
    bool_op     转到状态 84
    compare_op  转到状态 85


State 182

   24 exp: nil .
   82 new: nil .

    $end      reduce using rule 24 (exp)
    $end      [reduce using rule 82 (new)]
    LBRACK    reduce using rule 24 (exp)
    LBRACK    [reduce using rule 82 (new)]
    ARRAY     reduce using rule 24 (exp)
    ARRAY     [reduce using rule 82 (new)]
    IN        reduce using rule 24 (exp)
    IN        [reduce using rule 82 (new)]
    FUNCTION  reduce using rule 24 (exp)
    FUNCTION  [reduce using rule 82 (new)]
    VAR       reduce using rule 24 (exp)
    VAR       [reduce using rule 82 (new)]
    TYPE      reduce using rule 24 (exp)
    TYPE      [reduce using rule 82 (new)]
    $default  reduce using rule 24 (exp)


State 183

   26 exp: int .
   79 new: int .

    $end      reduce using rule 26 (exp)
    $end      [reduce using rule 79 (new)]
    LBRACK    reduce using rule 26 (exp)
    LBRACK    [reduce using rule 79 (new)]
    ARRAY     reduce using rule 26 (exp)
    ARRAY     [reduce using rule 79 (new)]
    IN        reduce using rule 26 (exp)
    IN        [reduce using rule 79 (new)]
    FUNCTION  reduce using rule 26 (exp)
    FUNCTION  [reduce using rule 79 (new)]
    VAR       reduce using rule 26 (exp)
    VAR       [reduce using rule 79 (new)]
    TYPE      reduce using rule 26 (exp)
    TYPE      [reduce using rule 79 (new)]
    $default  reduce using rule 26 (exp)


State 184

   27 exp: string .
   80 new: string .

    $end      reduce using rule 27 (exp)
    $end      [reduce using rule 80 (new)]
    LBRACK    reduce using rule 27 (exp)
    LBRACK    [reduce using rule 80 (new)]
    ARRAY     reduce using rule 27 (exp)
    ARRAY     [reduce using rule 80 (new)]
    IN        reduce using rule 27 (exp)
    IN        [reduce using rule 80 (new)]
    FUNCTION  reduce using rule 27 (exp)
    FUNCTION  [reduce using rule 80 (new)]
    VAR       reduce using rule 27 (exp)
    VAR       [reduce using rule 80 (new)]
    TYPE      reduce using rule 27 (exp)
    TYPE      [reduce using rule 80 (new)]
    $default  reduce using rule 27 (exp)


State 185

   87 array_new: ID LBRACK exp RBRACK OF new .

    $default  reduce using rule 87 (array_new)


State 186

   38 exp: parentheses .
   81 new: parentheses .

    $end      reduce using rule 38 (exp)
    $end      [reduce using rule 81 (new)]
    LBRACK    reduce using rule 38 (exp)
    LBRACK    [reduce using rule 81 (new)]
    ARRAY     reduce using rule 38 (exp)
    ARRAY     [reduce using rule 81 (new)]
    IN        reduce using rule 38 (exp)
    IN        [reduce using rule 81 (new)]
    FUNCTION  reduce using rule 38 (exp)
    FUNCTION  [reduce using rule 81 (new)]
    VAR       reduce using rule 38 (exp)
    VAR       [reduce using rule 81 (new)]
    TYPE      reduce using rule 38 (exp)
    TYPE      [reduce using rule 81 (new)]
    $default  reduce using rule 38 (exp)


State 187

   84 type_new_exps: type_new_exps COMMA ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACK  shift, and go to state 56
    LBRACE  shift, and go to state 6
    MINUS   shift, and go to state 7
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    LET     shift, and go to state 12
    BREAK   shift, and go to state 13
    NIL     shift, and go to state 14

    MINUS     [reduce using rule 99 (empty)]
    $default  reduce using rule 99 (empty)

    exp             转到状态 188
    lvalue          转到状态 25
    no_value_exp    转到状态 26
    nil             转到状态 27
    list            转到状态 28
    int             转到状态 29
    string          转到状态 30
    function        转到状态 31
    operation       转到状态 32
    exp_operation   转到状态 33
    bool_operation  转到状态 34
    compare         转到状态 35
    exp_compare     转到状态 36
    string_compare  转到状态 37
    assign          转到状态 38
    if_then         转到状态 39
    if_then_else    转到状态 40
    while_do        转到状态 41
    for_to_do       转到状态 42
    break           转到状态 43
    let_in_end      转到状态 44
    parentheses     转到状态 45
    empty           转到状态 46


State 188

   59 exp_operation: exp . exp_op exp
   64 bool_operation: exp . bool_op exp
   69 exp_compare: exp . compare_op exp
   84 type_new_exps: type_new_exps COMMA ID EQ exp .

    PLUS    shift, and go to state 77
    MINUS   shift, and go to state 78
    TIMES   shift, and go to state 79
    DIVIDE  shift, and go to state 80
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 81
    OR      shift, and go to state 82

    $default  reduce using rule 84 (type_new_exps)

    exp_op      转到状态 83
    bool_op     转到状态 84
    compare_op  转到状态 85
