%{
#include <stdio.h>
#include "util.h"
#include "errormsg.h"

int yylex(void); /* function prototype */

void yyerror(char *s)
{
 EM_error(EM_tokPos, "%s", s);
}
%}


%union {
	int pos;
	int ival;
	string sval;
	}

%token <sval> ID STRING
%token <ival> INT

%token 
  COMMA COLON SEMICOLON LPAREN RPAREN LBRACK RBRACK 
  LBRACE RBRACE DOT 
  PLUS MINUS TIMES DIVIDE EQ NEQ LT LE GT GE
  AND OR ASSIGN
  ARRAY IF THEN ELSE WHILE FOR TO DO LET IN END OF 
  BREAK NIL
  FUNCTION VAR TYPE 

%start program

%%

program: sentences

sentences: sentences sentence
         | sentence

sentence: decs
        | expseq

decs: decs dec
    | dec

dec: tydec
    | vardec
//    | fundec

typeid: ID

tydec: TYPE typeid EQ ty

ty: typeid
  | LBRACE tyfields RBRACE
  | ARRAY OF typeid

tyfield: ID COLON typeid

tyfields: tyfields COMMA tyfield
        | tyfield

vardec: VAR ID ASSIGN exp
      | VAR ID COLON typeid ASSIGN exp

exp: INT
   | typeid LBRACK exp RBRACK OF exp
   | NIL
   | LET decs IN expseq END
   | lvalue

lvalue: ID

expseq: expseq SEMICOLON exp
      | exp

/*
fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp
      | FUNCTION ID LPAREN tyfields RPAREN COLON typeid EQ exp
*/


